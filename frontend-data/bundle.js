(function (d3$1, topojson) {
  'use strict';

  // Code adapted from Laurens Aarnoudse
  function transformData(data){
    const selectedData = data.map(item => {
  		return {
      	areamanagerid: item.areamanagerid,
      	areageometryastext: getPropIfExists(item, "areageometryastext")
      }
    });
    return selectedData
  }

  function getPropIfExists(dataObject, prop){
    if (!dataObject[prop]) return "1"
    return dataObject[prop]
  }

  // With help of Laurens Aarnoudse
  function cleanData(dataArray, key) {
      return dataArray.map((item) => {
          const geoPoints = item[key]
          .replace(' ', '')
          .replace(',', '')
          .replace('))', '')
          .replace('((', '')
          .replace(')', '')
          .replace('(', '')
          .replace('GEOMETRYCOLLECTIONLINESTRING', '')
          .replace('MULTIPOLYGON', '')
          .replace('POINT', '')
          .replace('POLYGON', '')
          .replace('(', '')
          .replace(')', '')
          .slice(0, 24);
        const geoArray = geoPoints.split(' ');
        // console.log(geoArray)
        return { areamanagerid: item.areamanagerid, longitude: Number(geoArray[0]), latitude: Number(geoArray[1]) };
    });
  }

  // Start code Laurens Aarnoudse

  const endpointGeoPoints = 'https://opendata.rdw.nl/resource/nsk3-v9n7.json?$limit=6100';
  const colomnName = 'areageometryastext';
    
  getData(endpointGeoPoints)
    .then((parkingDataResponse) => {
      return parkingDataResponse.json()
    })
    .then((parkingData) => {
      const transformedArray = transformData(parkingData);
    	const geoPointsArray = cleanData(transformedArray, colomnName);
    	console.log(geoPointsArray);
    
      drawMap(geoPointsArray);
    });

  function getData(url) {
    return fetch(url)
  }

  function drawMap(geoData) {
  // Code adapted from sreen020
  // ------------------------------------------------------------------------------------
    const svg = d3.select("svg");
    const resetButton = d3.select(".reset");
    const changeButtonOne = d3.select(".changeOne");
    const changeButtonTwo = d3.select(".changeTwo");
    const changeButtonThree = d3.select(".changeThree");
   	const zoom = d3.zoom()
     .scaleExtent([1, 8])
     .on('zoom',  (e) => {
         g.attr('transform', e.transform);
     });
    const g = svg.append('g');

    const projection = d3$1.geoMercator().scale(5100).center([5.116667, 52.17]);
    const pathGenerator = d3$1.geoPath().projection(projection);
    
    d3$1.json('https://cartomap.github.io/nl/wgs84/gemeente_2020.topojson').then(
      (data) => {
        const townships = topojson.feature(data, data.objects.gemeente_2020);
        
        g
          .selectAll('path')
          .data(townships.features)
          .enter()
          .append('path')
          	.attr('d', pathGenerator)
          .append('title')
          .text((d) => `${d.properties.statnaam}`)
        	.attr('cursor', 'pointer');
        	
  // ------------------------------------------------------------------------------------
        
  //sources: https://www.youtube.com/watch?v=MTR2T5VyxMc, https://www.youtube.com/watch?v=hrJ64jpYb0A
  //and help from Gijs Laarman    
        g
        	.selectAll("g")
        	.data(geoData)
        	.enter()
        	.append('circle')
            .attr("cx", function(d){
              const long = d.longitude;
              const lat = d.latitude;
              return projection([+long, +lat])[0]  
            })
            .attr("cy", function(d){
              const long = d.longitude;
              const lat = d.latitude;
              return projection([+long, +lat])[1]
            })
        		.attr('r', '0.7px');
    });
    		
    		svg.call(zoom);
    
    // source: https://stackoverflow.com/questions/53056320/html-d3-js-how-to-zoom-from-the-mouse-cursor-rather-than-top-left-corner
    		resetButton
        	.text("Reset Zoom")
        	.on('click', function(){
          	g.transition()
        		.duration(750)
        		.call(zoom.transform, d3.zoomIdentity);
        	});
    
    		changeButtonOne
        	.text("Area Manager X");
    
    		changeButtonTwo
        	.text("Area Manager Y");
    
    		changeButtonThree
        	.text("Area Manager Z");
  }

}(d3, topojson));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,